service: onionful

plugins:
  - serverless-webpack
  - serverless-offline
  - serverless-domain-manager
  - serverless-aws-alias

provider:
  name: aws
  runtime: nodejs8.10
  region: eu-west-1
  stage: ${env:ENVIRONMENT, 'development'}
  environment:
    STAGE: ${self:provider.stage}
  iamRoleStatements:
    $ref: ./roleStatements.yml
  apiName: ${self:service}
  stackName: ${self:service}

custom:
  serverless-offline:
    host: ${env:OFFLINE_HOST}
    port: ${env:OFFLINE_PORT}
  customDomain:
    domainName: ${env:DOMAIN}
    stage: ${self:provider.stage}
    createRoute53Record: true
    endpointType: regional

functions:
  # auth

  auth:
    handler: src/auth.check
    name: ${self:service}-auth
    cors: true

  rotateToken:
    handler: src/auth.rotateToken
    name: ${self:service}-rotateToken
    cors: true
    events:
      - schedule:
        rate: cron(0 0/8 * * *)
      # TODO remove on production
      - http:
          path: rotate
          method: get
          cors: true


  # users

  usersList:
    handler: src/users.list
    name: ${self:service}-usersList
    events:
      - http:
          path: users
          method: get
          authorizer: auth
          cors: true

  # profile

  profileGet:
    handler: src/profile.get
    name: ${self:service}-profileGet
    events:
      - http:
          path: profile
          method: get
          authorizer: auth
          cors: true

  profileUpdate:
    handler: src/profile.update
    name: ${self:service}-profileUpdate
    events:
      - http:
          path: profile
          method: put
          authorizer: auth
          cors: true


  # contentTypes

  contentTypesCreate:
    handler: src/contentTypes.create
    name: ${self:service}-contentTypesCreate
    events:
      - http:
          path: content-types
          method: post
          authorizer: auth
          cors: true

  contentTypesUpdate:
    handler: src/contentTypes.update
    name: ${self:service}-contentTypesUpdate
    events:
      - http:
          path: content-types/{id}
          method: put
          authorizer: auth
          cors: true

  contentTypesGet:
    handler: src/contentTypes.get
    name: ${self:service}-contentTypesGet
    events:
      - http:
          path: content-types/{id}
          method: get
          cors: true

  contentTypesList:
    handler: src/contentTypes.list
    name: ${self:service}-contentTypesList
    events:
      - http:
          path: content-types
          method: get
          cors: true


  # contents

  contentCreate:
    handler: src/contents.create
    name: ${self:service}-contentCreate
    events:
      - http:
          path: contents
          method: post
          authorizer: auth
          cors: true

  contentUpdate:
    handler: src/contents.update
    name: ${self:service}-contentUpdate
    events:
      - http:
          path: contents/{id}
          method: put
          authorizer: auth
          cors: true

  contentGet:
    handler: src/contents.get
    name: ${self:service}-contentGet
    events:
      - http:
          path: contents/{id}
          method: get
          cors: true

  contentList:
    handler: src/contents.list
    name: ${self:service}-contentList
    events:
      - http:
          path: contents
          method: get
          cors: true


  # spaces

  spacesCreate:
    handler: src/spaces.create
    name: ${self:service}-spacesCreate
    events:
      - http:
          path: spaces
          method: post
          authorizer: auth
          cors: true

  spacesUpdate:
    handler: src/spaces.update
    name: ${self:service}-spacesUpdate
    events:
      - http:
          path: spaces/{id}
          method: put
          authorizer: auth
          cors: true

  spacesGet:
    handler: src/spaces.get
    name: ${self:service}-spacesGet
    events:
      - http:
          path: spaces/{id}
          method: get
          cors: true

  spacesList:
    handler: src/spaces.list
    name: ${self:service}-spacesList
    events:
      - http:
          path: spaces
          method: get
          cors: true
